{"version":3,"sources":["ui-component/cards/MainCard.js","ui-component/Table.js","ui-component/Form.js","ui-component/WordCloud.js","views/tweets/index.js"],"names":["headerSX","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","DataTable","rows","columns","style","height","width","pageSize","createTheme","overrides","MuiButton","label","color","makeStyles","margin","spacing","InputWithIcon","Grid","container","gridSpacing","item","xs","alignItems","TextField","id","name","Button","type","WordCloudComponent","textArray","wordCount","words","forEach","phrase","split","word","indexOf","push","currentWordCount","count","console","log","wordCloudData","map","text","value","data","Tweets","useState","setRows","setTextArray","location","useLocation","queryParams","qs","parse","search","replace","field","headerName","renderCell","params","href","getValue","useEffect","row","terms","quantity","language","body","store","axios","post","then","response","obj","id_str","user","screen_name","date","created_at","likes","favorite_count","retweets","retweet_count","error","length","marginTop","WordCloud"],"mappings":"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","file":"static/js/9.2ebe5486.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { useTheme } from '@material-ui/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\n\nconst MainCard = React.forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass,\n            contentSX,\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.primary[200] + 75,\n                    ':hover': {\n                        boxShadow: boxShadow ? (shadow ? shadow : '0 2px 14px 0 rgb(32 40 45 / 8%)') : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\n                {darkTitle && title && (\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nexport default function DataTable({ rows, columns }) {\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid rows={rows} columns={columns} pageSize={5} />\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { gridSpacing } from '../store/constant';\nimport Button from '@material-ui/core/Button/Button';\nimport { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n    overrides: {\n        MuiButton: {\n            label: {\n                color: '#f1f1f1'\n            }\n        }\n    }\n});\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1)\n    }\n}));\n\nexport default function InputWithIcon() {\n    return (\n        <form action=\"./tweets\">\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                            <AccountCircle />\n                        </Grid>\n                        <Grid item>\n                            <TextField id=\"input-with-icon-grid\" label=\"Termos\" name=\"terms\" />\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                            <AccountCircle />\n                        </Grid>\n                        <Grid item>\n                            <TextField id=\"input-with-icon-grid\" label=\"Quantidade de tweets\" name=\"quantity\" />\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                            <AccountCircle />\n                        </Grid>\n                        <Grid item>\n                            <TextField id=\"input-with-icon-grid\" label=\"Localização\" name=\"location\" />\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                            <AccountCircle />\n                        </Grid>\n                        <Grid item>\n                            <TextField id=\"input-with-icon-grid\" label=\"Idioma\" name=\"language\" />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Button theme={theme} variant={'contained'} color={'primary'} style={{ width: '98.5%' }} type={'submit'}>\n                Submeter\n            </Button>\n        </form>\n    );\n}\n","import React from 'react';\nimport WordCloud from 'react-d3-cloud';\n\nconst WordCloudComponent = ({ textArray }) => {\n    const wordCount = {};\n    const words = [];\n\n    textArray.forEach((phrase) => {\n        phrase.split(' ').forEach((word) => {\n            if (words.indexOf(word) === -1) {\n                words.push(word);\n            }\n            const currentWordCount = wordCount[word];\n            const count = currentWordCount ? currentWordCount : 0;\n            wordCount[word] = count + 1;\n        });\n    });\n    console.log(wordCount);\n    console.log(words);\n\n    const wordCloudData = words.map((word) => {\n        return { text: word, value: wordCount[word] * 200 };\n    });\n\n    return <WordCloud data={wordCloudData} />;\n};\n\nexport default WordCloudComponent;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport qs from 'querystring';\nimport axios from 'axios';\n// import { Grid } from '@material-ui/core';\n\n// material-ui\n\n// project imports\nimport MainCard from '../../ui-component/cards/MainCard';\nimport DataTable from '../../ui-component/Table';\nimport Form from '../../ui-component/Form';\nimport WordCloudComponent from '../../ui-component/WordCloud';\n\n//==============================|| SAMPLE PAGE ||==============================//\n\nconst Tweets = () => {\n    const [rows, setRows] = useState([]);\n    const [textArray, setTextArray] = useState([]);\n    const location = useLocation();\n\n    const queryParams = qs.parse(location.search.replace('?', ''));\n\n    const columns = [\n        {\n            field: 'user',\n            headerName: 'Usuário',\n            width: 150\n        },\n        {\n            field: 'date',\n            headerName: 'Data',\n            width: 150\n        },\n        {\n            field: 'likes',\n            headerName: 'Likes',\n            width: 150\n        },\n        {\n            field: 'retweets',\n            headerName: 'RTS',\n            width: 150\n        },\n        {\n            field: 'content',\n            headerName: 'Conteúdo',\n            width: 500,\n            renderCell: (params) => (\n                <a href={`https://twitter.com/${params.getValue(params.id, 'user')}/status/${params.getValue(params.id, 'id')}`}>\n                    {params.getValue(params.id, 'text')}\n                </a>\n            )\n        }\n    ];\n    useEffect(() => {\n        setTextArray(rows.map((row) => row.text));\n    }, [rows]);\n\n    useEffect(() => {\n        if (queryParams.terms && queryParams.quantity && queryParams.location && queryParams.language) {\n            const body = {\n                terms: queryParams.terms,\n                quantity: queryParams.quantity,\n                location: queryParams.location,\n                language: queryParams.language,\n                store: false\n            };\n\n            try {\n                axios.post('https://farmacovigia-api.herokuapp.com/tweets', body).then((response) =>\n                    setRows(\n                        response.data.map((obj) => {\n                            return {\n                                id: obj.id_str,\n                                user: obj.user.screen_name,\n                                date: obj.created_at,\n                                likes: obj.favorite_count,\n                                retweets: obj.retweet_count,\n                                text: obj.text\n                            };\n                        })\n                    )\n                );\n            } catch (error) {\n                console.log('An error occurred when fetching twitter data');\n            }\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <MainCard title=\"Tweets\">\n            <Form />\n\n            <br />\n\n            {rows.length ? (\n                <>\n                    <DataTable rows={rows} columns={columns} />\n\n                    <h1 style={{ marginTop: 64 }}>Wordcloud</h1>\n                    <WordCloudComponent textArray={textArray} />\n                </>\n            ) : (\n                <></>\n            )}\n        </MainCard>\n    );\n};\n\nexport default Tweets;\n"],"sourceRoot":""}