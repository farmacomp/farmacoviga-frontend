{"version":3,"sources":["ui-component/cards/MainCard.js","ui-component/cards/Skeleton/EarningCard.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","views/dashboard/Default/chart-data/bajaj-area-chart.js","views/dashboard/Default/BajajAreaChartCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/chart-data/total-order-month-line-chart.js","views/dashboard/Default/chart-data/total-order-year-line-chart.js","views/dashboard/Default/TotalOrderLineChartCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/index.js"],"names":["headerSX","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","useStyles","makeStyles","cardHeading","marginRight","marginTop","marginBottom","EarningCard","classes","Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","width","height","card","backgroundColor","dark","color","overflow","position","background","borderRadius","top","right","breakpoints","down","opacity","padding","avatar","typography","commonAvatar","largeAvatar","avatarRight","mediumAvatar","zIndex","fontSize","fontWeight","subHeading","avatarCircle","cursor","smallAvatar","circleIcon","transform","menuItem","isLoading","useState","anchorEl","setAnchorEl","handleClose","Fragment","Avatar","src","EarningIcon","alt","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","alignItems","Typography","mb","chartData","type","options","chart","sparkline","enabled","dataLabels","stroke","curve","tooltip","fixed","x","show","y","formatter","seriesName","marker","series","data","light","contentContainer","paddingBottom","fontStyle","BajajAreaChartCard","orangeDark","useEffect","newSupportChart","colors","ApexCharts","exec","xs","grey","cardAction","display","paddingTop","PopularCard","spacing","gridSpacing","zeroMinWidth","primaryLight","divider","avatarSuccess","success","marginLeft","successDark","avatarError","orange","errorDark","alignContent","pt","Divider","CardActions","Button","size","disableElevation","fill","yaxis","min","max","name","TotalOrderLineChartCard","timeValue","setTimeValue","handleChangeTime","newValue","e","ChartDataMonth","ChartDataYear","TotalIncomeCard","List","ListItem","disableGutters","ListItemAvatar","ListItemText","TotalIncomeDarkCard","mt","warning","TotalIncomeLightCard","TotalGrowthBarChart","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","grid","status","value","label","setValue","text","grey200","primary200","primaryDark","secondaryMain","main","secondaryLight","grey500","newChartData","style","TextField","select","onChange","target","map","option","Dashboard","setLoading","lg","md","sm"],"mappings":"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","file":"static/js/8.c4b81e9a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { useTheme } from '@material-ui/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\n\nconst MainCard = React.forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass,\n            contentSX,\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.primary[200] + 75,\n                    ':hover': {\n                        boxShadow: boxShadow ? (shadow ? shadow : '0 2px 14px 0 rgb(32 40 45 / 8%)') : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\n                {darkTitle && title && (\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    cardHeading: {\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '14px'\n    }\n});\n\n//-----------------------|| SKELETON EARNING CARD ||-----------------------//\n\nconst EarningCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container justifyContent=\"space-between\">\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={44} height={44} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={34} height={34} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" className={classes.cardHeading} height={40} />\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" height={30} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default EarningCard;\n","export default __webpack_public_path__ + \"static/media/earning.b019e86a.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonEarningCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport EarningIcon from './../../../assets/images/icons/earning.svg';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport GetAppTwoToneIcon from '@material-ui/icons/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@material-ui/icons/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.secondary[800],\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.secondary[800],\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.5,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.secondary[800],\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.secondary[200]\n    },\n    avatarCircle: {\n        cursor: 'pointer',\n        ...theme.typography.smallAvatar,\n        backgroundColor: theme.palette.secondary[200],\n        color: theme.palette.secondary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - EARNING CARD ||===========================//\n\nconst EarningCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <img src={EarningIcon} alt=\"Notification\" />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        className={classes.avatarRight}\n                                        aria-controls=\"menu-earning-card\"\n                                        aria-haspopup=\"true\"\n                                        onClick={handleClick}\n                                    >\n                                        <MoreHorizIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                    <Menu\n                                        id=\"menu-earning-card\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={handleClose}\n                                        variant=\"selectedMenu\"\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right'\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right'\n                                        }}\n                                    >\n                                        <MenuItem onClick={handleClose}>\n                                            <GetAppTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Import Card\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <FileCopyTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Copy Data\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <PictureAsPdfTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Export\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <ArchiveTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Archive File\n                                        </MenuItem>\n                                    </Menu>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container alignItems=\"center\">\n                                <Grid item>\n                                    <Typography className={classes.cardHeading}>$500.00</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Avatar className={classes.avatarCircle}>\n                                        <ArrowUpwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\n                                    </Avatar>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 1.25 }}>\n                            <Typography className={classes.subHeading}>Total Earning</Typography>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nEarningCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default EarningCard;\n","//-----------------------|| DASHBOARD - BAJAJ AREA CHART ||-----------------------//\n\nconst chartData = {\n    type: 'area',\n    height: 95,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Ticket '\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            data: [0, 15, 10, 50, 30, 40, 25]\n        }\n    ]\n};\n\nexport default chartData;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './chart-data/bajaj-area-chart';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    content: {\n        padding: '0px !important'\n    },\n    contentContainer: {\n        padding: '16px',\n        paddingBottom: 0,\n        color: '#fff'\n    },\n    fontStyle: {\n        fontWeight: 400\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||===========================//\n\nconst BajajAreaChartCard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const orangeDark = theme.palette.secondary[800];\n\n    React.useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [orangeDark]);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container className={classes.contentContainer}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\n                                    Bajaj Finery\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\n                                    $1839.00\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\n                            10% Profit\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Chart {...chartData} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default BajajAreaChartCard;\n","import React from 'react';\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from './../../../store/constant';\n\n// style constant\nconst useStyles = makeStyles({\n    cardAction: {\n        padding: '10px',\n        display: 'flex',\n        paddingTop: 0,\n        justifyContent: 'center'\n    }\n});\n\n//-----------------------|| SKELETON - POPULAR CARD ||-----------------------//\n\nconst PopularCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={20} width={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={150} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardContent className={classes.cardAction}>\n                <Skeleton variant=\"rect\" height={25} width={75} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonPopularCard from './../../../ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@material-ui/icons/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    cardAction: {\n        padding: '10px',\n        paddingTop: 0,\n        justifyContent: 'center'\n    },\n    primaryLight: {\n        color: theme.palette.primary[200],\n        cursor: 'pointer'\n    },\n    divider: {\n        marginTop: '12px',\n        marginBottom: '12px'\n    },\n    avatarSuccess: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.dark,\n        marginLeft: '15px'\n    },\n    successDark: {\n        color: theme.palette.success.dark\n    },\n    avatarError: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.orange.light,\n        color: theme.palette.orange.dark,\n        marginLeft: '15px'\n    },\n    errorDark: {\n        color: theme.palette.orange.dark\n    }\n}));\n\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\n\nconst PopularCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Popular Stocks</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            className={classes.primaryLight}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Bajaj Finery\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $100.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Reliance\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $200.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Stolon\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions className={classes.cardAction}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nPopularCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularCard;\n","//-----------------------|| DASHBOARD - TOTAL ORDER MONTH CHART ||-----------------------//\n\nconst chartData = {\n    type: 'line',\n    height: 90,\n    options: {\n        chart: {\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: ['#fff'],\n        fill: {\n            type: 'solid',\n            opacity: 1\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 3\n        },\n        yaxis: {\n            min: 0,\n            max: 100\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Total Order'\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            name: 'series1',\n            data: [45, 66, 41, 89, 25, 44, 9, 54]\n        }\n    ]\n};\n\nexport default chartData;\n","//-----------------------|| DASHBOARD - TOTAL ORDER YEAR CHART ||-----------------------//\n\nconst chartData = {\n    type: 'line',\n    height: 90,\n    options: {\n        chart: {\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: ['#fff'],\n        fill: {\n            type: 'solid',\n            opacity: 1\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 3\n        },\n        yaxis: {\n            min: 0,\n            max: 100\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Total Order'\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            name: 'series1',\n            data: [35, 44, 9, 54, 45, 66, 41, 69]\n        }\n    ]\n};\n\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&>div': {\n            position: 'relative',\n            zIndex: 5\n        },\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.primary[800],\n            borderRadius: '50%',\n            zIndex: 1,\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 1,\n            width: '210px',\n            height: '210px',\n            background: theme.palette.primary[800],\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.5,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff',\n        marginTop: '8px'\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCircle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||-----------------------//\n\nconst TotalOrderLineChartCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [timeValue, setTimeValue] = React.useState(false);\n    const handleChangeTime = (event, newValue) => {\n        setTimeValue(newValue);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <LocalMallOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        disableElevation\n                                        variant={timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, true)}\n                                    >\n                                        Month\n                                    </Button>\n                                    <Button\n                                        disableElevation\n                                        variant={!timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, false)}\n                                    >\n                                        Year\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 0.75 }}>\n                            <Grid container alignItems=\"center\">\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\">\n                                        <Grid item>\n                                            {timeValue ? (\n                                                <Typography className={classes.cardHeading}>$108</Typography>\n                                            ) : (\n                                                <Typography className={classes.cardHeading}>$961</Typography>\n                                            )}\n                                        </Grid>\n                                        <Grid item>\n                                            <Avatar className={classes.avatarCircle}>\n                                                <ArrowDownwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\n                                            </Avatar>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Typography className={classes.subHeading}>Total Order</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalOrderLineChartCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalOrderLineChartCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    content: {\n        padding: '16px !important'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n});\n\n//-----------------------|| SKELETON - TOTAL INCOME DARK/LIGHT Card ||-----------------------//\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Skeleton variant=\"rect\" width={44} height={44} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={<Skeleton variant=\"rect\" height={20} />}\n                            secondary={<Skeleton variant=\"text\" />}\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.light,\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff'\n    },\n    primary: {\n        color: '#fff'\n    },\n    secondary: {\n        color: theme.palette.primary.light,\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst TotalIncomeDarkCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\n                                    <TableChartOutlinedIcon fontSize=\"inherit\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.padding}\n                                sx={{\n                                    mt: 0.45,\n                                    mb: 0.45\n                                }}\n                                primary={\n                                    <Typography variant=\"h4\" className={classes.primary}>\n                                        $203k\n                                    </Typography>\n                                }\n                                secondary={\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                        Total Income\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeDarkCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.warning.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.warning.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.warning.light,\n        color: theme.palette.warning.dark\n    },\n    secondary: {\n        color: theme.palette.grey[500],\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\n\nconst TotalIncomeLightCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\n                                    <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                sx={{\n                                    mt: 0.45,\n                                    mb: 0.45\n                                }}\n                                className={classes.padding}\n                                primary={<Typography variant=\"h4\">$203k</Typography>}\n                                secondary={\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                        Total Income\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeLightCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeLightCard;\n","import React from 'react';\n\n// material-ui\nimport { Card, CardContent, Grid } from '@material-ui/core';\nimport Skeleton from '@material-ui/core/Skeleton';\n\n// project imports\nimport { gridSpacing } from '../../../store/constant';\n\n//-----------------------|| SKELETON TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = () => {\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"text\" />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={50} width={80} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={530} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalGrowthBarChart;\n","//-----------------------|| DASHBOARD - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst chartData = {\n    height: 480,\n    type: 'bar',\n    options: {\n        chart: {\n            id: 'bar-chart',\n            stacked: true,\n            toolbar: {\n                show: true\n            },\n            zoom: {\n                enabled: true\n            }\n        },\n        responsive: [\n            {\n                breakpoint: 480,\n                options: {\n                    legend: {\n                        position: 'bottom',\n                        offsetX: -10,\n                        offsetY: 0\n                    }\n                }\n            }\n        ],\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '50%'\n            }\n        },\n        xaxis: {\n            type: 'category',\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        legend: {\n            show: true,\n            fontSize: '14px',\n            fontFamily: `'Roboto', sans-serif`,\n            position: 'bottom',\n            offsetX: 20,\n            labels: {\n                useSeriesColors: false\n            },\n            markers: {\n                width: 16,\n                height: 16,\n                radius: 5\n            },\n            itemMargin: {\n                horizontal: 15,\n                vertical: 8\n            }\n        },\n        fill: {\n            type: 'solid'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        grid: {\n            show: true\n        }\n    },\n    series: [\n        {\n            name: 'Investment',\n            data: [35, 125, 35, 35, 35, 80, 35, 20, 35, 45, 15, 75]\n        },\n        {\n            name: 'Loss',\n            data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\n        },\n        {\n            name: 'Profit',\n            data: [35, 145, 35, 35, 20, 105, 100, 10, 65, 45, 30, 10]\n        },\n        {\n            name: 'Maintenance',\n            data: [0, 0, 75, 0, 0, 115, 0, 0, 0, 0, 150, 0]\n        }\n    ]\n};\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from './../../../ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\n\nconst status = [\n    {\n        value: 'today',\n        label: 'Today'\n    },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\n//-----------------------|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = ({ isLoading }) => {\n    const [value, setValue] = React.useState('today');\n    const theme = useTheme();\n\n    const primary = theme.palette.text.primary;\n    const grey200 = theme.palette.grey[200];\n\n    const primary200 = theme.palette.primary[200];\n    const primaryDark = theme.palette.primary.dark;\n    const secondaryMain = theme.palette.secondary.main;\n    const secondaryLight = theme.palette.secondary.light;\n    const grey500 = theme.palette.grey[500];\n\n    React.useEffect(() => {\n        const newChartData = {\n            ...chartData.options,\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n            xaxis: {\n                labels: {\n                    style: {\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: [primary]\n                    }\n                }\n            },\n            grid: {\n                borderColor: grey200\n            },\n            tooltip: {\n                theme: 'light'\n            },\n            legend: {\n                labels: {\n                    colors: grey500\n                }\n            }\n        };\n\n        // do not load chart when loading\n        if (!isLoading) {\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n        }\n    }, [primary200, primaryDark, secondaryMain, secondaryLight, primary, grey200, isLoading, grey500]);\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalGrowthBarChart />\n            ) : (\n                <MainCard>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Grid container direction=\"column\" spacing={1}>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle2\">Total Growth</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h3\">$2,324.00</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <TextField\n                                        id=\"standard-select-currency\"\n                                        select\n                                        value={value}\n                                        onChange={(e) => setValue(e.target.value)}\n                                    >\n                                        {status.map((option) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Chart {...chartData} />\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalGrowthBarChart.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalGrowthBarChart;\n","import React, { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@material-ui/core';\n\n// project imports\nimport EarningCard from './EarningCard';\nimport PopularCard from './PopularCard';\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\nimport { gridSpacing } from './../../../store/constant';\n\n//-----------------------|| DEFAULT DASHBOARD ||-----------------------//\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <EarningCard isLoading={isLoading} />\n                    </Grid>\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <TotalOrderLineChartCard isLoading={isLoading} />\n                    </Grid>\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeDarkCard isLoading={isLoading} />\n                            </Grid>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeLightCard isLoading={isLoading} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={8}>\n                        <TotalGrowthBarChart isLoading={isLoading} />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <PopularCard isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}