{"version":3,"sources":["ui-component/cards/MainCard.js","ui-component/Table.js","ui-component/Form.js","ui-component/WordCloud.js","views/tweets/index.js"],"names":["headerSX","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","columns","field","headerName","width","editable","type","description","sortable","valueGetter","params","getValue","id","rows","lastName","firstName","age","DataTable","style","height","pageSize","createTheme","overrides","MuiButton","label","color","Contact","state","name","message","email","subject","sent","buttonText","emailError","resetForm","setState","setTimeout","formSubmit","e","a","target","value","match","this","onSubmit","display","justifyContent","TextField","placeholder","multiline","rowsMax","onChange","required","handleChangeEmail","error","Button","Component","data","text","NuvemLavra","Tweets","Typography"],"mappings":"+OAQMA,EAAW,CACb,0BAA2B,CAAEC,GAAI,IAK/BC,EAAWC,IAAMC,YACnB,WAeIC,GACE,IAAD,IAdGC,cAcH,SAbGC,EAaH,EAbGA,UACAC,EAYH,EAZGA,SAYH,IAXGC,eAWH,SAVGC,EAUH,EAVGA,aACAC,EASH,EATGA,UACAC,EAQH,EARGA,UACAC,EAOH,EAPGA,UACAC,EAMH,EANGA,OAMH,IALGC,UAKH,MALQ,GAKR,EAJGC,EAIH,EAJGA,MACGC,EAGN,oIACKC,EAAQC,cAEd,OACI,eAAC,IAAD,yBACId,IAAKA,GACDY,GAFR,IAGIF,GAAE,aACET,OAAQA,EAAS,YAAc,OAC/Bc,YAAaF,EAAMG,QAAQC,QAAQ,KAAO,GAC1C,SAAU,CACNf,UAAWA,EAAaO,GAAkB,kCAAqC,YAEhFC,GATX,WAaMH,GAAaI,GAAS,cAAC,IAAD,CAAYD,GAAIf,EAAUgB,MAAOA,EAAOO,OAAQV,IACvED,GAAaI,GACV,cAAC,IAAD,CAAYD,GAAIf,EAAUgB,MAAO,cAAC,IAAD,CAAYQ,QAAQ,KAApB,SAA0BR,IAAqBO,OAAQV,IAI3FG,GAAS,cAAC,IAAD,IAGTP,GACG,cAAC,IAAD,CAAaM,GAAIJ,EAAWc,UAAWf,EAAvC,SACKF,KAGPC,GAAWD,SAoBdN,O,6FC/ETwB,EAAU,CACZ,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAO,IACxC,CACIF,MAAO,YACPC,WAAY,aACZC,MAAO,IACPC,UAAU,GAEd,CACIH,MAAO,WACPC,WAAY,YACZC,MAAO,IACPC,UAAU,GAEd,CACIH,MAAO,MACPC,WAAY,MACZG,KAAM,SACNF,MAAO,IACPC,UAAU,GAEd,CACIH,MAAO,WACPC,WAAY,YACZI,YAAa,sDACbC,UAAU,EACVJ,MAAO,IACPK,YAAa,SAACC,GAAD,gBAAeA,EAAOC,SAASD,EAAOE,GAAI,cAAgB,GAA1D,YAAgEF,EAAOC,SAASD,EAAOE,GAAI,aAAe,OAIzHC,EAAO,CACT,CAAED,GAAI,EAAGE,SAAU,OAAQC,UAAW,MAAOC,IAAK,IAClD,CAAEJ,GAAI,EAAGE,SAAU,YAAaC,UAAW,SAAUC,IAAK,IAC1D,CAAEJ,GAAI,EAAGE,SAAU,YAAaC,UAAW,2BAA4BC,IAAK,IAC5E,CAAEJ,GAAI,EAAGE,SAAU,QAASC,UAAW,OAAQC,IAAK,IACpD,CAAEJ,GAAI,EAAGE,SAAU,YAAaC,UAAW,WAAYC,IAAK,MAC5D,CAAEJ,GAAI,EAAGE,SAAU,aAAcC,UAAW,KAAMC,IAAK,KACvD,CAAEJ,GAAI,EAAGE,SAAU,WAAYC,UAAW,UAAWC,IAAK,IAC1D,CAAEJ,GAAI,EAAGE,SAAU,UAAWC,UAAW,UAAWC,IAAK,IACzD,CAAEJ,GAAI,EAAGE,SAAU,QAASC,UAAW,SAAUC,IAAK,KAG3C,SAASC,IACpB,OACI,qBAAKC,MAAO,CAAEC,OAAQ,IAAKf,MAAO,QAAlC,SACI,cAAC,IAAD,CAAUS,KAAMA,EAAMZ,QAASA,EAASmB,SAAU,M,8FC3CxD3B,EAAQ4B,YAAY,CACtBC,UAAW,CACPC,UAAW,CACPC,MAAO,CACHC,MAAO,eAMFC,E,4MACjBC,MAAQ,CACJC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,QAAS,GACTC,MAAM,EACNC,WAAY,eACZC,YAAY,G,EAIhBC,UAAY,WACR,EAAKC,SAAS,CACVR,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,QAAS,GACTE,WAAY,iBAGhBI,YAAW,WACP,EAAKD,SAAS,CAAEJ,MAAM,MACvB,M,EAuBPM,W,uCAAa,WAAOC,GAAP,SAAAC,EAAA,0F,6GApBb,SAAkBD,GAETA,EAAEE,OAAOC,MAAMC,MACZ,2JAaJC,KAAKR,SAAS,CAAEN,MAAOS,EAAEE,OAAOC,MAAOR,YAAY,KAVnDU,KAAKR,SAAS,CACVN,MAAOS,EAAEE,OAAOC,QAEpBE,KAAKR,SAAS,CAAEF,YAAY,IAEH,KAArBU,KAAKjB,MAAMG,OAEXc,KAAKR,SAAS,CAAEF,YAAY,O,oBA0BxC,WAAU,IAAD,OACL,OACI,uBAAMlC,UAAU,eAAe6C,SAAU,SAACN,GAAD,OAAO,EAAKD,WAAWC,IAAhE,UACI,sBAAKrB,MAAO,CAAE4B,QAAS,OAAQC,eAAgB,iBAA/C,UACI,cAACC,EAAA,EAAD,CACIpC,GAAG,8BACHY,MAAM,UACNyB,YAAY,gBACZlD,QAAQ,WACRmD,WAAS,EACTC,QAAS,EACTT,MAAOE,KAAKjB,MAAME,QAClBuB,SAAU,SAACb,GAAD,OAAO,EAAKH,SAAS,CAAEP,QAASU,EAAEE,OAAOC,SACnDW,UAAQ,EACR/C,KAAK,SAET,uBACA,uBACA,uBAEA,cAAC0C,EAAA,EAAD,CACIpC,GAAG,iBACHqC,YAAY,kBACZzB,MAAM,OACNzB,QAAQ,WACR2C,MAAOE,KAAKjB,MAAMC,KAClBwB,SAAU,SAACb,GAAD,OAAO,EAAKH,SAAS,CAAER,KAAMW,EAAEE,OAAOC,SAChDW,UAAQ,EACR/C,KAAK,SAET,uBACA,uBACA,uBAEA,cAAC0C,EAAA,EAAD,CACIpC,GAAG,iBACHY,MAAM,QACNyB,YAAY,sBACZlD,QAAQ,WACR2C,MAAOE,KAAKjB,MAAMG,MAClBsB,SAAU,SAACb,GAAD,OAAO,EAAKe,kBAAkBf,IACxCgB,MAAOX,KAAKjB,MAAMO,WAClBmB,UAAQ,EACR/C,KAAK,UAET,uBACA,uBACA,uBACA,cAAC0C,EAAA,EAAD,CACIpC,GAAG,iBACHqC,YAAY,gBACZzB,MAAM,UACNzB,QAAQ,WACR2C,MAAOE,KAAKjB,MAAMI,QAClBqB,SAAU,SAACb,GAAD,OAAO,EAAKH,SAAS,CAAEL,QAASQ,EAAEE,OAAOC,SACnDW,UAAQ,IAEZ,uBACA,0BAEJ,uBACA,cAACG,EAAA,EAAD,CAAQ/D,MAAOA,EAAOM,QAAS,YAAa0B,MAAO,UAAWP,MAAO,CAAEd,MAAO,SAAWE,KAAM,SAA/F,6B,GA9HqBmD,a,kBCb/BC,EAAO,CACT,CAAEC,KAAM,MAAOjB,MAAO,KACtB,CAAEiB,KAAM,MAAOjB,MAAO,KACtB,CAAEiB,KAAM,mBAAoBjB,MAAO,KACnC,CAAEiB,KAAM,YAAajB,MAAO,KAC5B,CAAEiB,KAAM,OAAQjB,MAAO,IACvB,CAAEiB,KAAM,MAAOjB,MAAO,KACtB,CAAEiB,KAAM,MAAOjB,MAAO,KACtB,CAAEiB,KAAM,mBAAoBjB,MAAO,KACnC,CAAEiB,KAAM,YAAajB,MAAO,KAC5B,CAAEiB,KAAM,OAAQjB,MAAO,IACvB,CAAEiB,KAAM,MAAOjB,MAAO,KACtB,CAAEiB,KAAM,MAAOjB,MAAO,KACtB,CAAEiB,KAAM,mBAAoBjB,MAAO,KACnC,CAAEiB,KAAM,YAAajB,MAAO,KAC5B,CAAEiB,KAAM,OAAQjB,MAAO,KAGZ,SAASkB,IACpB,OAEI,aADA,CACC,IAAD,CAAWF,KAAMA,ICwDVG,UA9DA,WA8BX,OACI,eAACpF,EAAA,EAAD,CAAUc,MAAM,SAAhB,UACI,cAAC,EAAD,IAEA,cAACuE,EAAA,EAAD,CAAY/D,QAAQ,QAApB,4bAOA,cAACkB,EAAD,IAEA,cAAC2C,EAAD","file":"static/js/9.f964f5b2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { useTheme } from '@material-ui/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\n\nconst MainCard = React.forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass,\n            contentSX,\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.primary[200] + 75,\n                    ':hover': {\n                        boxShadow: boxShadow ? (shadow ? shadow : '0 2px 14px 0 rgb(32 40 45 / 8%)') : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\n                {darkTitle && title && (\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n    { field: 'id', headerName: 'ID', width: 90 },\n    {\n        field: 'firstName',\n        headerName: 'First name',\n        width: 150,\n        editable: true\n    },\n    {\n        field: 'lastName',\n        headerName: 'Last name',\n        width: 150,\n        editable: true\n    },\n    {\n        field: 'age',\n        headerName: 'Age',\n        type: 'number',\n        width: 110,\n        editable: true\n    },\n    {\n        field: 'fullName',\n        headerName: 'Full name',\n        description: 'This column has a value getter and is not sortable.',\n        sortable: false,\n        width: 160,\n        valueGetter: (params) => `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\n    }\n];\n\nconst rows = [\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaimefhoiusdafiuhaousidf', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 }\n];\n\nexport default function DataTable() {\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid rows={rows} columns={columns} pageSize={5} />\n        </div>\n    );\n}\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button/Button';\nimport { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n    overrides: {\n        MuiButton: {\n            label: {\n                color: '#f1f1f1'\n            }\n        }\n    }\n});\n\nexport default class Contact extends Component {\n    state = {\n        name: '',\n        message: '',\n        email: '',\n        subject: '',\n        sent: false,\n        buttonText: 'Send Message',\n        emailError: false\n    };\n    // Functions\n\n    resetForm = () => {\n        this.setState({\n            name: '',\n            message: '',\n            email: '',\n            subject: '',\n            buttonText: 'Message Sent'\n        });\n\n        setTimeout(() => {\n            this.setState({ sent: false });\n        }, 3000);\n    };\n\n    handleChangeEmail(e) {\n        if (\n            !e.target.value.match(\n                /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            )\n        ) {\n            this.setState({\n                email: e.target.value\n            });\n            this.setState({ emailError: true });\n\n            if (this.state.email === '') {\n                // check if the input is empty\n                this.setState({ emailError: false });\n            }\n        } else {\n            this.setState({ email: e.target.value, emailError: false });\n        }\n    }\n\n    formSubmit = async (e) => {\n        // e.preventDefault();\n        // this.setState({\n        //     buttonText: '...sending'\n        // });\n        // let data = {\n        //     name: this.state.name,\n        //     email: this.state.email,\n        //     message: this.state.message,\n        //     subject: this.state.subject\n        // };\n        // try {\n        //     await axios.post('BACKEND_URL', data);\n        //     this.setState({ sent: true }, this.resetForm());\n        // } catch (error) {\n        //     console.log(error);\n        // }\n    };\n\n    render() {\n        return (\n            <form className=\"contact-form\" onSubmit={(e) => this.formSubmit(e)}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <TextField\n                        id=\"standard-multiline-flexible\"\n                        label=\"Message\"\n                        placeholder=\"Enter Message\"\n                        variant=\"outlined\"\n                        multiline\n                        rowsMax={4}\n                        value={this.state.message}\n                        onChange={(e) => this.setState({ message: e.target.value })}\n                        required\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <br />\n\n                    <TextField\n                        id=\"outlined-basic\"\n                        placeholder=\"Enter your name\"\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        value={this.state.name}\n                        onChange={(e) => this.setState({ name: e.target.value })}\n                        required\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <br />\n\n                    <TextField\n                        id=\"outlined-basic\"\n                        label=\"Email\"\n                        placeholder=\"Enter email address\"\n                        variant=\"outlined\"\n                        value={this.state.email}\n                        onChange={(e) => this.handleChangeEmail(e)}\n                        error={this.state.emailError}\n                        required\n                        type=\"email\"\n                    />\n                    <br />\n                    <br />\n                    <br />\n                    <TextField\n                        id=\"outlined-basic\"\n                        placeholder=\"Enter Subject\"\n                        label=\"Subject\"\n                        variant=\"outlined\"\n                        value={this.state.subject}\n                        onChange={(e) => this.setState({ subject: e.target.value })}\n                        required\n                    />\n                    <br />\n                    <br />\n                </div>\n                <br />\n                <Button theme={theme} variant={'contained'} color={'primary'} style={{ width: '98.5%' }} type={'submit'}>\n                    Submeter\n                </Button>\n                {/* <div className=\"button--container\">\n                    <button type=\"submit\" className=\"button button-primary\">\n                        {this.state.buttonText}\n                    </button>\n                </div> */}\n            </form>\n        );\n    }\n}\n","import React from 'react';\nimport WordCloud from 'react-d3-cloud';\n\nconst data = [\n    { text: 'Hey', value: 10000 },\n    { text: 'lol', value: 200 },\n    { text: 'first impression', value: 800 },\n    { text: 'very cool', value: 100 },\n    { text: 'duck', value: 10 },\n    { text: 'Hey', value: 1000 },\n    { text: 'lol', value: 200 },\n    { text: 'first impression', value: 800 },\n    { text: 'very cool', value: 100 },\n    { text: 'duck', value: 10 },\n    { text: 'Hey', value: 1000 },\n    { text: 'lol', value: 200 },\n    { text: 'first impression', value: 800 },\n    { text: 'very cool', value: 100 },\n    { text: 'duck', value: 10 }\n];\n\nexport default function NuvemLavra() {\n    return (\n        // <div style={{ width: '100%' }}>\n        <WordCloud data={data} />\n        // </div>\n    );\n}\n","import React, { useState } from 'react';\n\nimport { useLocation } from 'react-router-dom';\nimport qs from 'querystring';\n// import { Grid } from '@material-ui/core';\n\n// material-ui\nimport { Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from '../../ui-component/cards/MainCard';\nimport DataTable from '../../ui-component/Table';\nimport Contact from '../../ui-component/Form';\nimport NuvemLavra from '../../ui-component/WordCloud';\n// import TextField from '@material-ui/core/TextField';\n\n//==============================|| SAMPLE PAGE ||==============================//\n\nconst Tweets = () => {\n    // const [tweetArray, setTweetArray] = useState([]);\n    // const location = useLocation();\n\n    // const queryParams = qs.parse(location.search.replace('?', ''));\n\n    // const postToApi = () => {\n    //     fetch('https://farmacovigia-api.herokuapp.com/tweets', {\n    //         method: 'POST',\n    //         headers: {\n    //             Accept: 'application/json',\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             terms: ['astrazeneca'],\n    //             quantity: 1,\n    //             location: 'brasil',\n    //             language: 'pt-br',\n    //             store: false\n    //         })\n    //     })\n    //         .then((response) => response.json())\n    //         .then((data) => setTweetArray(data));\n    //     console.log(tweetArray);\n    // };\n\n    // if (tweetArray.length === 0 && queryParams.terms) {\n    //     postToApi();\n    // }\n\n    return (\n        <MainCard title=\"Tweets\">\n            <Contact />\n\n            <Typography variant=\"body2\">\n                Lorem ipsum dolor sit amen, consenter nipissing eli, sed do elusion tempos incident ut laborers et doolie magna alissa. Ut\n                enif ad minim venice, quin nostrum exercitation illampu laborings nisi ut liquid ex ea commons construal. Duos aube grue\n                dolor in reprehended in voltage veil esse colum doolie eu fujian bulla parian. Exceptive sin ocean cuspidate non president,\n                sunk in culpa qui officiate descent molls anim id est labours.\n            </Typography>\n\n            <DataTable />\n\n            <NuvemLavra />\n\n            {/* <TextField id=\"standard-search\" label=\"Search field\" type=\"search\" />\n\n            <TextField id=\"standard-number\" label=\"Number\" type=\"number\" /> */}\n            {/* {queryParams.terms ? (\n                tweetArray.map((obj) => (\n                    <div>\n                        <p>{obj.retweet_count}</p>, <p>{obj.favorite_count}</p>, <p>{obj.id}</p>, <p>{obj.user.screen_name}</p>,{' '}\n                        <p>{obj.text}</p>,<p>{obj.created_at}</p>, <p>{obj.text.length()}</p>\n                    </div>\n                ))\n            ) : (\n                <></>\n            )} */}\n        </MainCard>\n    );\n};\n\nexport default Tweets;\n"],"sourceRoot":""}